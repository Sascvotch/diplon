
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_ОбслуживаниеКлиента.Договор
	|ПОМЕСТИТЬ ВТ_Док
	|ИЗ
	|	Документ.ВКМ_ОбслуживаниеКлиентов КАК ВКМ_ОбслуживаниеКлиента
	|ГДЕ
	|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоговорыКонтрагентов.ВидДоговора,
	|	ВЫРАЗИТЬ(ДоговорыКонтрагентов.ВКМ_ДатаНачалаДействияДоговора КАК ДАТА) КАК ДатаНачала,
	|	ВЫРАЗИТЬ(ДоговорыКонтрагентов.ВКМ_ДатаОкончанияДействияДоговора КАК ДАТА) КАК ДатаОкончания,
	|	ДоговорыКонтрагентов.ВКМ_СуммаАП,
	|	ДоговорыКонтрагентов.ВКМ_СтоимостьЧаса,
	|	ДоговорыКонтрагентов.Представление
	|ИЗ
	|	ВТ_Док КАК ВТ_Док
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО ВТ_Док.Договор = ДоговорыКонтрагентов.Ссылка";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();

	Если Запрос.Выполнить().Пустой() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Произошла непредвиденная ошибка, документ Обслуживание Клиента не найден";
		Сообщение.Сообщить();
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Выборка = РезультатЗапроса.Выбрать();

	Если Не Выборка.Следующий() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон("В документе не выбран договор");
		Сообщение.Сообщить();
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Если Не Выборка.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон("Тип договора %1, а должен быть Абонентское Обслуживание", Выборка.ВидДоговора);
		Сообщение.Сообщить();
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Если Не НачалоДня(Выборка.ДатаНачала) <= НачалоДня(ДатаПроведенияРабот) И НачалоДня(Выборка.ДатаОкончания)
		>= НачалоДня(ДатаПроведенияРабот) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Дата выполнения работ не соответствует периоду действия договора";
		Сообщение.Сообщить();
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПроцентОтРабот КАК ПроцентОплаты
	|ИЗ
	|	РегистрСведений.ВКМ_УсловияОплатыСотрудников КАК УсловияОплатыСотрудников
	|ГДЕ
	|	УсловияОплатыСотрудников.Сотрудник = &Специалист
	|	И УсловияОплатыСотрудников.Период < &ДатаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	УсловияОплатыСотрудников.Период УБЫВ";
	   
	Запрос.УстановитьПараметр("Специалист", Специалист);
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);

	Результат = Запрос.Выполнить();
	ВыборкаПроцент = Результат.Выбрать();

	Если Не ВыборкаПроцент.Следующий() Тогда
        // Процент не найден
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон(
			"Для специалиста %1 на дату %2 не установлен процент оплаты! Документ не может быть проведён.", Специалист,
			Формат(Дата, "ДФ=dd.MM.yyyy"));
		Сообщение.Сообщить();
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Если ВыборкаПроцент.ПроцентОплаты = Неопределено Тогда
        // Процент явно не задан (NULL в базе)
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон(
			"Для специалиста %1 на дату %2 не установлен процент оплаты! Документ не может быть проведён.", Специалист,
			Формат(Дата, "ДФ=dd.MM.yyyy"));
		Сообщение.Сообщить();
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	КоличествоЧасовКОплате = ВыполненныеРаботы.Итог("ЧасыКОплатеКлиенту");
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
	Движение.Период = ДатаПроведенияРабот;
	Движение.Клиент = Клиент;
	Движение.Договор = Договор;
	Движение.КоличествоЧасов = КоличествоЧасовКОплате;
	Движение.СуммаКОплате = КоличествоЧасовКОплате * Выборка.ВКМ_СтоимостьЧаса;
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
	Для Каждого ТекСтрокаВыполненныеРаботы Из ВыполненныеРаботы Цикл
		Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
		Движение.Период = ДатаПроведенияРабот;
		Движение.Сотрудник = Специалист;
		Движение.ЧасовКОплате = ТекСтрокаВыполненныеРаботы.ЧасыКОплатеКлиенту;
		Движение.СуммаКОплате = КоличествоЧасовКОплате * Выборка.ВКМ_СтоимостьЧаса * ВыборкаПроцент.ПроцентОплаты / 100;
	КонецЦикла;

КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда  
        Возврат;  
    КонецЕсли; 
		
	Если ЭтоНовый() Тогда 
	
		Текст = СтрШаблон ("Новая заявка: специалист - %1, дата работ - %2, время начала - %3, время окончания - %4", Специалист, Формат(ДатаПроведенияРабот,"ДЛФ=ДД"), Формат(ВремяНачалаРаботПлан,"ДЛФ=T"), Формат(ВремяОкончанияРаботПлан, "ДЛФ=T"));
		НовыйЭлемент = Справочники.ВКМ_УведомленияТБ.СоздатьЭлемент();
		НовыйЭлемент.Текст = Текст; 
		НовыйЭлемент.Записать(); 
	
	КонецЕсли; 
	
	Если Не ЭтоНовый() Тогда 
		Запрос = Новый Запрос; 
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВКМ_ОбслуживаниеКлиентов.ДатаПроведенияРабот,
			|	ВКМ_ОбслуживаниеКлиентов.ВремяНачалаРаботПлан,
			|	ВКМ_ОбслуживаниеКлиентов.ВремяОкончанияРаботПлан,
			|	ВКМ_ОбслуживаниеКлиентов.Специалист
			|ИЗ
			|	Документ.ВКМ_ОбслуживаниеКлиентов КАК ВКМ_ОбслуживаниеКлиентов
			|ГДЕ
			|	ВКМ_ОбслуживаниеКлиентов.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		
		Если Не Выборка.Следующий() Тогда 
			Возврат;	
		КонецЕсли; 
		Изменения = Ложь;
		Если ДатаПроведенияРабот <> Выборка.ДатаПроведенияРабот Тогда 
			
			ТекстИзменений=СтрШаблон("Дата работ изменилась на %1",Формат(ДатаПроведенияРабот,"ДЛФ=ДД"));
			Изменения = Истина;
			
		КонецЕсли; 
		Если ВремяНачалаРаботПлан <> Выборка.ВремяНачалаРаботПлан Тогда 
			
			ТекстИзменений=СтрШаблон("Время начала работ изменилось на %1",Формат(ВремяНачалаРаботПлан, "ДЛФ=T"));
			Изменения = Истина;
			
		КонецЕсли; 
		Если Специалист <> Выборка.Специалист Тогда 
			
			ТекстИзменений=СтрШаблон("Специалист изменился на %1",Специалист);
			Изменения = Истина;
			
		КонецЕсли; 
		
		Если Изменения = Истина Тогда
			Текст = СтрШаблон("В заявке %1 произошли изменения: %2", Ссылка, ТекстИзменений);	
			НовыйЭлемент = Справочники.ВКМ_УведомленияТБ.СоздатьЭлемент();
			НовыйЭлемент.Текст = Текст; 
			НовыйЭлемент.Записать(); 
		КонецЕсли;	
	КонецЕсли; 

КонецПроцедуры
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций

#КонецОбласти

#Область Инициализация

#КонецОбласти

#КонецЕсли
