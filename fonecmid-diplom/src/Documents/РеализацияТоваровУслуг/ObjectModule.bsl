
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

//добавлено 22.06.2025
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПР = ПроверяемыеРеквизиты.Найти("Основание");
	Если ПР <> Неопределено Тогда
    	ПроверяемыеРеквизиты.Удалить(ПР);
	КонецЕсли;

КонецПроцедуры
//конец добавленного кода

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//добавлено 22.06.2025
Процедура ВыполнитьАвтозаполнение () Экспорт
	
	Если ПустаяСтрока(Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить()) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Константа 'Номенклатура Абонентская Плата' не заполнена";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;	
	Если ПустаяСтрока(Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить()) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Константа 'Номенклатура Работы Специалиста' не заполнена";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.Договор,
		|	КОЛИЧЕСТВО(ЕСТЬNULL(ВКМ_ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовОборот, 0)) КАК КоличествоЧасовОборот,
		|	СУММА(ЕСТЬNULL(ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеОборот, 0)) КАК СуммаКОплатеОборот,
		|	МАКСИМУМ(ЕСТЬNULL(ДоговорыКонтрагентов.ВКМ_СуммаАП, 0)) КАК ВКМ_СуммаАП
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Обороты(&НачалоПериода, &КонецПериода,,
		|			Договор = &Договор) КАК ВКМ_ВыполненныеКлиентуРаботыОбороты
		|		ПО ВКМ_ВыполненныеКлиентуРаботыОбороты.Договор = ДоговорыКонтрагентов.Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.Договор";
	
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Запрос.Выполнить().Пустой() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Договор отсутствует";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;  
	
	Выборка = РезультатЗапроса.Выбрать();
	
	
	
	СуммаАПДобавлена = Ложь;
	
	Пока Выборка.Следующий() Цикл
		
	Если Выборка.ВКМ_СуммаАП > 0 Тогда	
		НоваяСтрока = Услуги.Добавить();
		НоваяСтрока.Номенклатура = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
		НоваяСтрока.Количество = 1;
		НоваяСтрока.Сумма = Выборка.ВКМ_СуммаАП;
		Записать();
	КонецЕсли;
		
		
	Если Выборка.СуммаКОплатеОборот > 0 Тогда	
		НоваяСтрока1 = Услуги.Добавить();
		НоваяСтрока1.Номенклатура = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
		НоваяСтрока1.Количество = Выборка.КоличествоЧасовОборот;
		НоваяСтрока1.Сумма = Выборка.СуммаКОплатеОборот;
		Записать();
	КонецЕсли;		
		
	КонецЦикла;	
	
	
	
КонецПроцедуры	
//конец добавленного кода

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецЕсли
