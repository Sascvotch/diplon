
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытий
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;    
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ВКМ_ВзаиморасчетыССотрудниками");  
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = Выплаты;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Сотрудник","Сотрудник"); 
	Блокировка.Заблокировать();
	
	ТекущиеДанные = Выплаты.Выгрузить();
	Для Каждого ТекСтрока Из ТекущиеДанные Цикл
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Сотрудник = ТекСтрока.Сотрудник;
		Движение.Сумма = ТекСтрока.Сумма;
	КонецЦикла;
	
	
	
КонецПроцедуры
#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций

#КонецОбласти

#Область Инициализация

#КонецОбласти

#КонецЕсли
